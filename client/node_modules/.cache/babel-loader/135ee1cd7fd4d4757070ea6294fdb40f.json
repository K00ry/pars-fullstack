{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport { Component, Children } from 'react';\nimport PropTypes from 'prop-types';\n\nvar I18nextProvider = function (_Component) {\n  _inherits(I18nextProvider, _Component);\n\n  function I18nextProvider(props, context) {\n    _classCallCheck(this, I18nextProvider);\n\n    var _this = _possibleConstructorReturn(this, (I18nextProvider.__proto__ || Object.getPrototypeOf(I18nextProvider)).call(this, props, context));\n\n    _this.i18n = props.i18n;\n    _this.defaultNS = props.defaultNS;\n\n    if (props.initialI18nStore) {\n      _this.i18n.services.resourceStore.data = props.initialI18nStore;\n      _this.i18n.options.isInitialSSR = true; // if set will be deleted on first render in translate hoc\n    }\n\n    if (props.initialLanguage) {\n      _this.i18n.changeLanguage(props.initialLanguage);\n    }\n\n    _this.reportNS = props.reportNS;\n    return _this;\n  }\n\n  _createClass(I18nextProvider, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        i18n: this.i18n,\n        defaultNS: this.defaultNS,\n        reportNS: this.reportNS\n      };\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.i18n !== nextProps.i18n) {\n        throw new Error('[react-i18next][I18nextProvider]does not support changing the i18n object.');\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      return Children.only(children);\n    }\n  }]);\n\n  return I18nextProvider;\n}(Component);\n\nI18nextProvider.propTypes = {\n  i18n: PropTypes.object.isRequired,\n  children: PropTypes.element.isRequired,\n  defaultNS: PropTypes.string,\n  reportNS: PropTypes.func\n};\nI18nextProvider.childContextTypes = {\n  i18n: PropTypes.object.isRequired,\n  defaultNS: PropTypes.string,\n  reportNS: PropTypes.func\n};\nI18nextProvider.defaultProps = {\n  defaultNS: undefined,\n  reportNS: undefined\n};\nexport default I18nextProvider;","map":null,"metadata":{},"sourceType":"module"}